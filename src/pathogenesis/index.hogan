<!DOCTYPE html>
<html lang="en" dir="ltr">

<head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="robots" content="index,follow">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1.0">
    <meta name="format-detection" content="telephone=no">
    
    <title>IgAN Pathogenesis Simulator - Interactive Disease Overview</title>
    <meta name="description" content="Explore the IgAN mechanism of disease by looking inside the body to see how the 4-hit cascade can lead to ESKD and the role of APRIL in this process"/>
    <link rel="canonical" href="https://www.igansim.org/pathogenesis/" />
    
    <link rel="apple-touch-icon" sizes="180x180" href="../assets/images/favicon/apple-touch-icon.png">
    <link rel="icon" type="image/png" sizes="32x32" href="../assets/images/favicon/favicon-32x32.png">
    <link rel="icon" type="image/png" sizes="16x16" href="../assets/images/favicon/favicon-16x16.png">
    <link rel="mask-icon" href="../assets/images/favicon/safari-pinned-tab.svg" color="#69186B">
    <link rel="shortcut icon" href="../assets/images/favicon/favicon.ico">
    <meta name="msapplication-TileColor" content="#69186b">
    <meta name="msapplication-config" content="../assets/images/favicon/browserconfig.xml">
    <meta name="theme-color" content="#69186b">
    <link rel="stylesheet" href="./TemplateData/style.css">
    <link rel="manifest" href="./manifest.webmanifest">

    <link rel="stylesheet" href="https://use.typekit.net/lmu6hvn.css">
    <!-- IgAN SIM SPECIFIC STYLES -->
    <link href="../styles.bundle.css" rel="stylesheet" type="text/css">

    <!-- Google Tag Manager -->
    <script>
        (function (w, d, s, l, i) { w[l] = w[l] || []; w[l].push({ 'gtm.start': new Date().getTime(), event: 'gtm.js' }); var f = d.getElementsByTagName(s)[0], j = d.createElement(s), dl = l != 'dataLayer' ? '&l=' + l : ''; j.async = true; j.src = 'https://www.googletagmanager.com/gtm.js?id=' + i + dl; f.parentNode.insertBefore(j, f); })(window, document, 'script', 'dataLayer', 'GTM-WZLFQZR3');
    </script>
    <!-- End Google Tag Manager -->
</head>

<body>

    <!-- Google Tag Manager (noscript) -->
    <noscript><iframe src="https://www.googletagmanager.com/ns.html?id=GTM-WZLFQZR3" height="0" width="0"
            style="display:none;visibility:hidden"></iframe></noscript>
    <!-- End Google Tag Manager (noscript) -->

    <main class="wrapper" data-page-id="pathogenesis" data-path-level="1">

        {{> ../templates/nav }}
        {{> ../templates/interstitial }}

        <div id="unity-container">
          <canvas id="unity-canvas" width=1440 height=825 tabindex="-1"></canvas>

          <div id="unity-loading-bar">
            <img id="logo" src="./assets/images/igan-logo.png" alt="IgAN logo" class="update-path"/>
            <p id="loading-text">Content is loading&mdash;thanks for your patience.</p>

            <div id="unity-progress-bar-empty">
              <div id="unity-progress-bar-full"></div>
            </div>
          </div>
          <div id="unity-warning"> </div>
        </div>
      </main>

    <script src="Build/builds.loader.js"></script>
    <script>
      window.addEventListener("load", function () {
        if ("serviceWorker" in navigator) {
          navigator.serviceWorker.register("ServiceWorker.js");
        }
      });

      var container = document.querySelector("#unity-container");
      var canvas = document.querySelector("#unity-canvas");
      var loadingBar = document.querySelector("#unity-loading-bar");
      var progressBarFull = document.querySelector("#unity-progress-bar-full");
      var warningBanner = document.querySelector("#unity-warning");

      // Shows a temporary message banner/ribbon for a few seconds, or
      // a permanent error message on top of the canvas if type=='error'.
      // If type=='warning', a yellow highlight color is used.
      // Modify or remove this function to customize the visually presented
      // way that non-critical warnings and error messages are presented to the
      // user.
      function unityShowBanner(msg, type) {
        function updateBannerVisibility() {
          warningBanner.style.display = warningBanner.children.length ? 'block' : 'none';
        }
        var div = document.createElement('div');
        div.innerHTML = msg;
        warningBanner.appendChild(div);
        if (type == 'error') div.style = 'background: red; padding: 10px;';
        else {
          if (type == 'warning') div.style = 'background: yellow; padding: 10px;';
          setTimeout(function() {
            warningBanner.removeChild(div);
            updateBannerVisibility();
          }, 5000);
        }
        updateBannerVisibility();
      }

      var buildUrl = "Build";
      var loaderUrl = buildUrl + "/builds.loader.js";
      var config = {
        arguments: [],
        dataUrl: buildUrl + "/builds.data",
        frameworkUrl: buildUrl + "/builds.framework.js",
        codeUrl: buildUrl + "/builds.wasm",
        streamingAssetsUrl: "StreamingAssets",
        companyName: "GSW",
        productName: "GSW OTSUKA MOD",
        productVersion: "0.2",
        showBanner: unityShowBanner,
      };

      // By default Unity keeps WebGL canvas render target size matched with
      // the DOM size of the canvas element (scaled by window.devicePixelRatio)
      // Set this to false if you want to decouple this synchronization from
      // happening inside the engine, and you would instead like to size up
      // the canvas DOM size and WebGL render target sizes yourself.
      // config.matchWebGLToCanvasSize = false;

      if (/iPhone|iPad|iPod|Android/i.test(navigator.userAgent)) {
        // Mobile device style: fill the whole browser client area with the game canvas:
        var meta = document.createElement('meta');
        meta.name = 'viewport';
        meta.content = 'width=device-width, height=device-height, initial-scale=1.0, user-scalable=no, shrink-to-fit=yes';
        document.getElementsByTagName('head')[0].appendChild(meta);
      }

      loadingBar.style.display = "flex";

      var script = document.createElement("script");
      script.src = loaderUrl;
      script.onload = () => {
        createUnityInstance(canvas, config, (progress) => {
          progressBarFull.style.width = 100 * progress + "%";
        }).then((unityInstance) => {
          loadingBar.style.display = "none";
          window.unity = unityInstance;

          let jumpLink = (location.hash) ? location.hash.slice(1) : null;

          if (window.innerWidth <= 475) {
              window.unity.SendMessage('ProjectRoot', 'ToggleMobile', 'true')
          } else {
              window.unity.SendMessage('ProjectRoot', 'ToggleMobile', 'false');
          }

          if (jumpLink === 'april') {
              window.unity.SendMessage('ProjectRoot', 'RemoteSkipToChapter');
          } else if (jumpLink === 'about-igan') {
              window.unity.SendMessage('ProjectRoot', 'RemoteSkipToTop');
          }
        }).catch((message) => {
          alert(message);
        });

      };
      document.body.appendChild(script);
    </script>

    {{> ../templates/footer-el }}

    <script type="text/javascript" src="../static.bundle.js" charset="utf-8"></script>
</body>

</html>